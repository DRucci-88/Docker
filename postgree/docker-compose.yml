# A Docker Compose must always start with the version tag.
# We use '3' because it's the last version.
# time="2025-01-23T22:41:58+07:00" level=warning msg="E:\\Code\\Docker\\postgres\\docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
# version: '4.37.1'

# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  postgres:
    # Official Postgres image from DockerHub (we use the last version)
    image: 'postgres:17-alpine'

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      - 5432:5432

    environment:
      POSTGRES_USER: postgres # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: 12345678 # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: public # The PostgreSQL default database (automatically created at first launch)
    volumes:
      - postgres17_data:/var/lib/postgresql/data/

volumes:
  postgres17_data: